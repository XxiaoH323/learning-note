1.分装变化
2.多用组合，少用继承
3.针对接口变成，不针对实现编程
    ”针对接口编程“真正的意思是”针对超类型编程“  --- 关于接口继承和类继承的相关概念可以参考《设计模式-可复用面向对象软件的基础》
    在设计模式中，实现一个接口泛指实现某个超类型的某个方法，和具体的语言机制误关。
4.依赖抽象，不要依赖具体类（"工厂模式-工厂方法"中引入）
    依赖倒置原则：不能让高层组件依赖低层组件，并且高层组组件与底层组件都应该依赖于抽象；所谓"高层"组件，是由其他底层组件定义其行为的类
        倒置指的是和一般OO设计的思考方式完全相反--->在Head First一书中在介绍“工厂方法”时所用“很依赖的披萨店”，原先是从披萨店自上而下，披萨类没有什么影响力，
        而通过工厂方法，高层组件“披萨店”生产“披萨”，而底层组件的定义依赖于“披萨接口”，不再是自上而下。
    注意点:
        1.变量不可以持有具体类的引用
        2.不要让类派生自具体类（继承具体类）
        3.不要覆盖基类中已经实现的方法--如果覆盖基类已实现的方法，那么基类就不在是一个真正适合被继承的抽象。基类中已经实现的方法，应该由所有子类共享。
5.好莱坞原则:别调用我们，我们调用你（在"模板方法"中引入）
    指父类调用一个子类的操作，而不是相反
    允许底层组件将自己挂钩到系统上，但由高层组件决定什么时候和怎么使用底层组件。
